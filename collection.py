# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13whP60KwPO7e0GcyhBoMiCwjJXa6xWH1
"""

import pandas as pd
import urllib

collision_url = 'https://data.cityofnewyork.us/api/views/h9gi-nx95/rows.csv?accessType=DOWNLOAD'

urllib.request.urlretrieve(collision_url, "collisions.csv")

col_df = pd.read_csv('./collisions.csv')

col_df['datetime'] = col_df['DATE'] + ' ' + col_df['TIME']
col_df['datetime'] = pd.to_datetime(col_df['datetime'] , infer_datetime_format = True)

col_df_postvz = col_df[col_df['datetime'].dt.year >= 2014]

vz_features = col_df_postvz[['datetime' , 'ON STREET NAME' ,'NUMBER OF PERSONS INJURED' ,'NUMBER OF PEDESTRIANS KILLED', \
                            'NUMBER OF PERSONS KILLED' , 'NUMBER OF PEDESTRIANS INJURED', 'NUMBER OF CYCLIST INJURED', \
                            'NUMBER OF CYCLIST KILLED', 'NUMBER OF MOTORIST INJURED', 'NUMBER OF MOTORIST KILLED']]

vz_features['hour'] = vz_features['datetime'].dt.hour

vz_features['weekday'] = vz_features['datetime'].dt.weekday

vz_features['street_name'] = vz_features['ON STREET NAME'].str.lower()
vz_features['street_name'] = vz_features['street_name'].str.strip()
vz_features.drop(['ON STREET NAME'],axis=1,inplace=True)

sum_incidents = vz_features.groupby('street_name').sum()

sum_incidents.shape

sum_incidents.drop(['hour', 'weekday'], axis=1,inplace=True)

ped_safety_shapefile = 'https://data.cityofnewyork.us/api/geospatial/mqt5-ctec?method=export&format=Shapefile'
urllib.request.urlretrieve(ped_safety_shapefile, "pedsafety1.zip")
!unzip pedsafety1.zip

! pip install geopandas

import geopandas as gpd

ped_safety = gpd.GeoDataFrame.from_file('./geo_export_95efd9cb-a079-404a-bec3-e8480739d14b.shp')

ped_safety['main_stree'] = ped_safety['main_stree'].str.lower()
ped_safety['cross_stre'] = ped_safety['cross_stre'].str.lower()

ped_safety.shape

y = ped_safety.groupby(['main_stree']).count()

y.head()

x = sum_incidents.merge(y[['cross_stre']], left_index=True, right_index=True,how='left')

x.head()

x['cross_stre'].fillna(0, inplace=True)

x.rename(columns={'cross_stre' :'peds_safety_sig'} , inplace= True)

speed_limit = 'https://data.cityofnewyork.us/api/geospatial/7n5j-865y?method=export&format=Shapefile'
urllib.request.urlretrieve(speed_limit, "speed_limit.zip")
!unzip speed_limit.zip

speed_limit = gpd.GeoDataFrame.from_file('./geo_export_0460f679-3919-4531-86aa-5fd7b03efbe4.shp')

speed_limit['street'] = speed_limit['street'].str.lower()
speed_limit['street'] = speed_limit['street'].str.strip()

mean_speed_limit = speed_limit.groupby(['street']).mean()

mean_speed_limit.head(20)

x1 = x.merge(mean_speed_limit, left_index=True, right_index=True,how='left')

x1.head()

x1['postvz_sl'].fillna(0,inplace=True)

speed_hump ='https://data.cityofnewyork.us/api/geospatial/7f9e-jic4?method=export&format=Shapefile'
urllib.request.urlretrieve(speed_hump, "sh.zip")
!unzip sh.zip

speed_hump = gpd.GeoDataFrame.from_file('./geo_export_0af907e8-7791-416b-8870-62a0d6436417.shp')

speed_hump.head()

speed_hump['on_st'] = speed_hump['on_st'].str.lower()
speed_hump['on_st'] = speed_hump['on_st'].str.strip()
speed_hump.set_index(speed_hump['on_st'].str.lower(),inplace=True)

speed_hump = speed_hump.groupby(['on_st']).sum()
speed_hump.head()

x2 = x1.merge(speed_hump[['new_humps']], left_index=True, right_index=True, how='left')

x2['new_humps'].fillna(0, inplace=True)

x2.head()

left_turn  = 'https://data.cityofnewyork.us/api/geospatial/hz4p-9f7s?method=export&format=Shapefile'
urllib.request.urlretrieve(left_turn, "left_turn.zip")
!unzip left_turn.zip

left_turn_gpd = gpd.GeoDataFrame.from_file('./geo_export_44382c80-616a-4770-8466-7ad07bcd7d54.shp')

left_turn_gpd.head()

left_turn_streets = left_turn_gpd[['street1' ,'street2']]
left_turn_streets['street1'] = left_turn_streets['street1'].str.lower()
left_turn_streets['street2'] = left_turn_streets['street2'].str.lower()

street1 = left_turn_streets['street1'].values.tolist()
street2 = left_turn_streets['street2'].values.tolist()
streets = street1 + street2

left_turn_streets = pd.DataFrame(streets)

left_turn_streets.rename(columns={0 : 'street_name'}, inplace= True)
left_turn_streets['lt_calm'] = 1

left_turn_streets.set_index('street_name', inplace=True)
left_turn_streets.head()

x5 = x2.merge(left_turn_streets,how='left', left_index=True, right_index=True)

x5.head()

x5['lt_calm'].fillna(0,inplace=True)

x5.head()

x5['shape_leng'].fillna(x5['shape_leng'].mean(),inplace=True)

from google.colab import files
x5.to_csv('./sf3.csv')
files.download('./sf3.csv')

x5.head()

